
version: '2'

services:

    zookeeper:
        image: hyperledger/fabric-zookeeper
        ports:
            - "2181"
            - "2888"
            - "3888"

    kafka:
        image: hyperledger/fabric-kafka
        environment:
            - KAFKA_LOG_RETENTION_MS=-1
            - KAFKA_MESSAGE_MAX_BYTES=103809024
            - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024
            - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
            - KAFKA_DEFAULT_REPLICATION_FACTOR=${KAFKA_DEFAULT_REPLICATION_FACTOR}
            - KAFKA_MIN_INSYNC_REPLICAS=2
        ports:
            - "9092"

    orderer:
        image: hyperledger/fabric-orderer
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - ORDERER_HOME=/var/hyperledger/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - CONFIGTX_ORDERER_ORDERERTYPE=kafka
            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=false
            - ORDERER_GENERAL_TLS_PRIVATEKEY=${ORDERER_GENERAL_TLS_PRIVATEKEY}
            - ORDERER_GENERAL_TLS_CERTIFICATE=${ORDERER_GENERAL_TLS_CERTIFICATE}
            - ORDERER_TLS_CLIENTAUTHREQUIRED=${ORDERER_TLS_CLIENTAUTHREQUIRED}
        volumes:
            - ../config/:/var/hyperledger/configs
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - "7050"

    couchdb:
        image: hyperledger/fabric-couchdb

    peer:
        image: hyperledger/fabric-peer
        environment:
            - GOPATH=/opt/gopath/
            - GOROOT=/opt/go/
            - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
            - CORE_PEER_NETWORKID=${CORE_PEER_NETWORKID}
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_behave
            - CORE_PEER_ADDRESSAUTODETECT=true
            - CORE_PEER_GOSSIP_ORGLEADER=false
            - CORE_PEER_GOSSIP_USELEADERELECTION=true
            - CORE_PEER_PROFILE_ENABLED=true
            - CORE_LOGGING_LEVEL=INFO
            - CORE_LOGGING_GOSSIP=${CORE_LOGGING_GOSSIP}
            - CORE_LOGGING_MSP=DEBUG
            # TLS settings
            - CORE_PEER_TLS_ENABLED=false
            - CORE_PEER_TLS_CLIENTAUTHREQUIRED=${CORE_PEER_TLS_CLIENTAUTHREQUIRED}
            - CORE_PEER_TLS_CERT_FILE=${CORE_PEER_TLS_CERT_FILE}
            - CORE_PEER_TLS_KEY_FILE=${CORE_PEER_TLS_KEY_FILE}
            - CORE_PEER_MSPCONFIGPATH=/var/hyperledger/msp
            - CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/tls/ca.crt
        volumes:
            - /var/run/:/host/var/run/
            - ${GOROOT}/src/:/opt/go/src
            - ${GOPATH}/src/github.com/hyperledger/fabric/:/opt/gopath/src/github.com/hyperledger/fabric/
            - ../chaincode:/opt/gopath/src/chaincode
            - ../config/:/var/hyperledger/configs
            - ../channel-artifacts:/var/hyperledger/custom-configs
        command: peer node start
        ports:
            - "7051"
            - "7053"

